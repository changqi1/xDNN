#pragma once

#include <array>
#include <cmath>
#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <limits>
#include <iostream>

#include "uint4x2.h"

// reference: https://arxiv.org/pdf/2305.14314.pdf
const float XDNN_NORMAL_FLOAT32[16] = {
    -1.00000000000000000, // 10111111'10000000'00000000'00000000
    -0.69619280099868770, // 10111111'00110010'00111001'10110001
    -0.52507305145263670, // 10111111'00000110'01101011'00110000
    -0.39491748809814453, // 10111110'11001010'00110010'10100000
    -0.28444138169288635, // 10111110'10010001'10100010'01001101
    -0.18477343022823334, // 10111110'00111101'00110101'00111111
    -0.09105003625154495, // 10111101'10111010'01111000'01110001
     0.00000000000000000, // 00000000'00000000'00000000'00000000
     0.07958029955625534, // 00111101'10100010'11111010'11111111
     0.16093020141124725, // 00111110'00100100'11001010'11100011
     0.24611230194568634, // 00111110'01111100'00000100'11011101
     0.33791524171829224, // 00111110'10101101'00000011'00111010
     0.44070982933044434, // 00111110'11100001'10100100'10111000
     0.56261700391769410, // 00111111'00010000'00000111'10101011
     0.72295683622360230, // 00111111'00111001'00010011'10110011
     1.00000000000000000  // 00111111'10000000'00000000'00000000
};

using XDNN_NF4x2 = XDNN_UINT4x2;

/*
int main(void) {
    uint8_t mem_addr[8] = {0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef}; // Big end
    uint8_t mem_addr[8] = {0x10, 0x32, 0x54, 0x76, 0x98, 0xba, 0xdc, 0xfe}; // little end
    float out[16];

    __m512 dst = _m512_loadu_cvtepu4_ps(mem_addr);

    _mm512_storeu_ps(out, dst);
    for (int i = 0; i < 16; ++i) {
        printf("%.12f, ", out[i]);
    }
    return 0;
}
*/